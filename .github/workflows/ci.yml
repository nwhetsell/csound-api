name: CI

on: [push, pull_request]

jobs:
  Test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-2019]
        node-version: [20.x, 19.x, 18.x, 16.x, 14.x]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install Boost and Csound on macOS
      run: brew install boost csound
      if: ${{ matrix.os == 'macos-latest' }}
    - name: Install Boost and Csound on Linux
      run: |
        sudo apt-get --assume-yes install libboost-dev libsndfile1-dev
        wget --no-verbose https://github.com/csound/csound/archive/refs/tags/6.18.1.tar.gz
        tar -xf 6.18.1.tar.gz
        cd csound-6.18.1
        cmake -S . -B build -DBUILD_DSSI_OPCODES=OFF
        cmake --build build
        sudo cmake --install build
        sudo ldconfig
      if: ${{ matrix.os == 'ubuntu-latest' }}
    - name: Install Boost and Csound on Windows
      run: |
        choco install boost-msvc-14.2 --no-progress
        curl.exe --location --remote-name --remote-header-name --show-error --silent https://github.com/csound/csound/releases/download/6.18.1/Csound6_x64-6.18.1-windows-x64-installer.zip
        7z x Csound6_x64-6.18.1-windows-x64-installer.zip
        Start-Process Csound6_x64-windows_x86_64-6.18.0-1245.exe /noRestart -Wait
        Add-Content $Env:GITHUB_PATH "$Env:ProgramFiles\Csound6_x64\bin" -Encoding utf8
      if: ${{ matrix.os == 'windows-2019' }}

    - name: Install csound-api on macOS and Linux
      run: npm install
      if: ${{ matrix.os != 'windows-2019' }}
    - name: Install csound-api on Windows
      run: |
        $Env:CL = "/I`"C:\local\boost_1_74_0`" /I`"$Env:ProgramFiles\Csound6_x64\include`""
        $Env:LINK = "`"$Env:ProgramFiles\Csound6_x64\lib\csound64.lib`""
        npm install
      if: ${{ matrix.os == 'windows-2019' }}

    - name: Install Jasmine
      run: npm install --global jasmine

    - name: Run tests
      run: npm test
